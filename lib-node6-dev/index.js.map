{"version":3,"sources":["../src/index.js"],"names":["SentryHandler","mapToSentryLevel","TRACE","DEBUG","INFO","WARNING","ERROR","FATAL","EMERGENCY","createHandler","ravenUrl","ravenClient","level","metadata","extra","error","extraData","originalError","parsedStack","stackTrace","toArray","captureError","minLevel","handle"],"mappings":";;;;;;;;kBA0CwBA,a;;;;;;AA1CxB;;AACA;;;;;;AAEA,MAAMC,mBAAmB;AACvB,GAAC,4BAAOC,KAAR,GAAgB,OADO;AAEvB,GAAC,4BAAOC,KAAR,GAAgB,OAFO;AAGvB,GAAC,4BAAOC,IAAR,GAAe,MAHQ;AAIvB,GAAC,4BAAOC,OAAR,GAAkB,SAJK;AAKvB,GAAC,4BAAOC,KAAR,GAAgB,OALO;AAMvB,GAAC,4BAAOC,KAAR,GAAgB,OANO;AAOvB,GAAC,4BAAOC,SAAR,GAAoB;AAPG,CAAzB;;AAUA,MAAMC,gBAAiBC,QAAD,IAAc;AAClC,QAAMC,cAAc,kBAAgBD,QAAhB,CAApB;;AAEA,SAAO,UAAgC;AAAA,QAA7BE,KAA6B,QAA7BA,KAA6B;AAAA,QAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,QAAZC,KAAY,QAAZA,KAAY;;AACrC,QAAIC,QAAQF,YAAYA,SAASE,KAAjC;;AAEA,QAAI,CAACA,KAAL,EAAY;AACV;AACD;;AAED,UAAMC,yBAAiBH,QAAjB,IAA2BC,KAA3B,GAAN;AACA,WAAOE,UAAUD,KAAjB;;AAEA,QAAIA,MAAME,aAAV,EAAyB;AACvB;AACAD,gBAAUE,WAAV,GAAwBH,MAAMI,UAAN,CAAiBC,OAAjB,EAAxB;AACAL,cAAQA,MAAME,aAAd;AACD;;AAEDN,gBAAYU,YAAZ,CACEN,KADF,EAEE;AACEH,aAAOX,iBAAiBW,KAAjB,KAA2B,OADpC;AAEEE,aAAOE;AAFT,KAFF;AAOD,GAvBD;AAwBD,CA3BD;;AA6Be,SAAShB,aAAT,CAAuBU,QAAvB,EAAyCY,QAAzC,EAA2D;AAAA,UAApCZ,QAAoC;;AAAA,UAAlBY,QAAkB;;AACxE,OAAKA,QAAL,GAAgBA,QAAhB;AACA,OAAKC,MAAL,GAAcd,cAAcC,QAAd,CAAd;AACD","file":"index.js","sourcesContent":["import { Client as RavenClient } from 'raven';\nimport levels from 'nightingale-levels';\n\nconst mapToSentryLevel = {\n  [levels.TRACE]: 'debug',\n  [levels.DEBUG]: 'debug',\n  [levels.INFO]: 'info',\n  [levels.WARNING]: 'warning',\n  [levels.ERROR]: 'error',\n  [levels.FATAL]: 'fatal',\n  [levels.EMERGENCY]: 'fatal',\n};\n\nconst createHandler = (ravenUrl) => {\n  const ravenClient = new RavenClient(ravenUrl);\n\n  return ({ level, metadata, extra }) => {\n    let error = metadata && metadata.error;\n\n    if (!error) {\n      return;\n    }\n\n    const extraData = { ...metadata, extra };\n    delete extraData.error;\n\n    if (error.originalError) {\n      // error-processor\n      extraData.parsedStack = error.stackTrace.toArray();\n      error = error.originalError;\n    }\n\n    ravenClient.captureError(\n      error,\n      {\n        level: mapToSentryLevel[level] || 'error',\n        extra: extraData,\n      },\n    );\n  };\n};\n\nexport default function SentryHandler(ravenUrl: string, minLevel: number) {\n  this.minLevel = minLevel;\n  this.handle = createHandler(ravenUrl);\n}\n"]}